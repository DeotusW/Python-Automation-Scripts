{"name": "test_Hardware_Type", "status": "failed", "statusDetails": {"message": "AssertionError: Testcase Failed: 0412-000105 Mismatch! - Expected: 0411-000014, Actual: 0412-000105", "trace": "self = <test_HappyPath_HT.TestHappyPathHT object at 0x000002588588F750>\n\n    def HappyPathTest(self):\n        try:\n            response = self.get_json_response()\n            jsonResponse = response.json()\n            if not jsonResponse:\n                raise AssertionError(\"JSON Response is Empty\")\n>           self.validate_json_response(response,jsonResponse)\n\nMainFolder\\BaseFolder\\BaseHappyPath.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_HappyPath_HT.TestHappyPathHT object at 0x000002588588F750>\nresponse = <Response [200]>\njsonResponse = [{'cancelRequest': False, 'created': '2025-10-22T04:16:12.113226Z', 'currentStepName': 'Deactivation_Appareo', 'curren...'created': '2025-10-22T04:15:02.633493Z', 'currentStepName': 'Deactivation_Appareo', 'currentStepNumber': 6, ...}, ...]\n\n    def validate_json_response(self,response,jsonResponse):\n        RequestMain().validate_statuscode(response,self.STATUSCODE)\n        if not jsonResponse:\n            raise AssertionError(\"API returned an empty response\")\n        for item in jsonResponse:\n            if item[\"id\"] == self.EXPECTED[\"id\"]:\n                print(f\"ID: {item['id']}\")\n                for key, value in self.EXPECTED.items():\n>                   assert item[key] == value, f\"{item[key]} Mismatch! - Expected: {value}, Actual: {item[key]}\"\n                           ^^^^^^^^^^^^^^^^^^\nE                   AssertionError: 0412-000105 Mismatch! - Expected: 0411-000014, Actual: 0412-000105\n\nMainFolder\\BaseFolder\\BaseHappyPath.py:26: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_HappyPath_HT.TestHappyPathHT object at 0x000002588588F750>\n\n    def test_Hardware_Type(self):\n>       self.HappyPathTest()\n\nMainFolder\\Testcases\\hardwareType\\test_HappyPath_HT.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_HappyPath_HT.TestHappyPathHT object at 0x000002588588F750>\n\n    def HappyPathTest(self):\n        try:\n            response = self.get_json_response()\n            jsonResponse = response.json()\n            if not jsonResponse:\n                raise AssertionError(\"JSON Response is Empty\")\n            self.validate_json_response(response,jsonResponse)\n        except Exception as e:\n>           raise AssertionError(f\"Testcase Failed: {e}\")\nE           AssertionError: Testcase Failed: 0412-000105 Mismatch! - Expected: 0411-000014, Actual: 0412-000105\n\nMainFolder\\BaseFolder\\BaseHappyPath.py:36: AssertionError"}, "attachments": [{"name": "stdout", "source": "45bd94c5-5013-4df5-8c26-6c68f3aad7fc-attachment.txt", "type": "text/plain"}], "start": 1761118557701, "stop": 1761118566605, "uuid": "5f520b6b-e714-4c79-820c-eb76e27fe744", "historyId": "f815ee719006b1ddc0ffa9ca2a815a23", "testCaseId": "f815ee719006b1ddc0ffa9ca2a815a23", "fullName": "Testcases.hardwareType.test_HappyPath_HT.TestHappyPathHT#test_Hardware_Type", "labels": [{"name": "parentSuite", "value": "Testcases.hardwareType"}, {"name": "suite", "value": "test_HappyPath_HT"}, {"name": "subSuite", "value": "TestHappyPathHT"}, {"name": "host", "value": "DWILSON3-IN-LE1"}, {"name": "thread", "value": "33024-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcases.hardwareType.test_HappyPath_HT"}], "titlePath": ["Testcases", "hardwareType", "test_HappyPath_HT.py", "TestHappyPathHT"]}